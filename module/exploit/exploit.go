package exploit

import (
	"context"
	"net/http"

	"project/internal/module"
)

// Context contains common configuration and options.
type Context struct {
	// common options
	RemoteHost string `json:"RHOST"`
	RemotePort uint16 `json:"RPORT"`

	// about http
	TLS       bool   `json:"TLS"` // use https
	URL       string `json:"url"` // must start with "/"
	UserAgent string `json:"user_agent"`

	httpClient *http.Client
}

// Exploit implemented module.Module
type Exploit struct {
	name        string
	description string
}

func (e *Exploit) Name() string {
	return e.name
}

func (e *Exploit) Description() string {
	return e.description
}

func (e *Exploit) Start() error {
	return nil
}

func (e *Exploit) Stop() {

}

func (e *Exploit) Restart() error {
	return nil
}

func (e *Exploit) IsStarted() bool {
	return true
}

func (e *Exploit) Info() string {
	return ""
}

func (e *Exploit) Status() string {
	return ""
}

func (e *Exploit) Check(ctx context.Context) error {
	return nil
}

func (e *Exploit) Exploit(ctx context.Context) error {
	return nil
}

func (e *Exploit) Methods() []*module.Method {
	return nil
}

func (e *Exploit) Call(method string, args ...interface{}) (interface{}, error) {
	return nil, nil
}
